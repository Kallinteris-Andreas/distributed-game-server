apiVersion: v1
kind: Service
metadata:
  name: userinterface
spec:
  type: NodePort
  selector:
    app: prj-ui
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30100
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-deployment
spec:
  selector:
    matchLabels:
      app: prj-ui
  replicas: 1
  template:
    metadata:
      labels:
        app: prj-ui
    spec:
      containers:
      - name: uicont
        image: php:7.4-apache
        volumeMounts:
        - mountPath: /var/www/html
          name: uivol
      volumes:
      - name: uivol
        hostPath:
          path: /hostprj/UserInterface
          type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  selector:
    app: prj-mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodatavol
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  selector:
    matchLabels:
      app: prj-mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: prj-mongo
    spec:
      containers:
      - name: mongocont
        image: mongo
        args: [--nojournal]
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d
          name: mongovol
        - mountPath: /data/db
          name: mongodatavol
      volumes:
      - name: mongovol
        hostPath:
          path: /hostprj/MongoDB
          type: Directory
      - name: mongodatavol
        persistentVolumeClaim:
          claimName: mongodatavol
---
apiVersion: v1
kind: Service
metadata:
  name: authmanager
spec:
  selector:
    app: prj-auth
  ports:
    - protocol: TCP
      port: 42069
      targetPort: 42069
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-deployment
spec:
  selector:
    matchLabels:
      app: prj-auth
  replicas: 1
  template:
    metadata:
      labels:
        app: prj-auth
    spec:
      containers:
      - name: authcont
        image: python:3
        command: ['/bin/sh', 'init.sh']
        workingDir: /usr/src/app
        volumeMounts:
        - mountPath: /usr/src/app/auth.db
          name: authvol1
        - mountPath: /usr/src/app/auth_db.py
          name: authvol2
        - mountPath: /usr/src/app/auth_server.py
          name: authvol3
        - mountPath: /usr/src/app/init.sh
          name: authvol4
      volumes:
      - name: authvol1
        hostPath:
          path: /hostprj/Auth/auth.db
          type: File
      - name: authvol2
        hostPath:
          path: /hostprj/Auth/auth_db.py
          type: File
      - name: authvol3
        hostPath:
          path: /hostprj/Auth/auth_server.py
          type: File
      - name: authvol4
        hostPath:
          path: /hostprj/Auth/init.sh
          type: File
---
apiVersion: v1
kind: Service
metadata:
  name: gamemaster
spec:
  selector:
    app: prj-gm
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gm-deployment
spec:
  selector:
    matchLabels:
      app: prj-gm
  replicas: 1
  template:
    metadata:
      labels:
        app: prj-gm
    spec:
      containers:
      - name: gmcont
        image: python:3
        command: ['/bin/sh', 'init.sh']
        workingDir: /usr/src/app
        volumeMounts:
        - mountPath: /usr/src/app/game_master.db
          name: gmvol1
        - mountPath: /usr/src/app/game_master_db.py
          name: gmvol2
        - mountPath: /usr/src/app/game_master_mongo_interface.py
          name: gmvol3
        - mountPath: /usr/src/app/game_master_server.py
          name: gmvol4
        - mountPath: /usr/src/app/init.sh
          name: gmvol5
      volumes:
      - name: gmvol1
        hostPath:
          path: /hostprj/GameMaster/game_master.db
          type: File
      - name: gmvol2
        hostPath:
          path: /hostprj/GameMaster/game_master_db.py
          type: File
      - name: gmvol3
        hostPath:
          path: /hostprj/GameMaster/game_master_mongo_interface.py
          type: File
      - name: gmvol4
        hostPath:
          path: /hostprj/GameMaster/game_master_server.py
          type: File
      - name: gmvol5
        hostPath:
          path: /hostprj/GameMaster/init.sh
          type: File
---
apiVersion: v1
kind: Service
metadata:
  name: playmaster
spec:
  selector:
    app: prj-pm
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pm-deployment
spec:
  selector:
    matchLabels:
      app: prj-pm
  replicas: 3
  template:
    metadata:
      labels:
        app: prj-pm
    spec:
      containers:
      - name: pmcont
        image: node
        command: ['/bin/sh', 'init.sh']
        workingDir: /home/node/app
        volumeMounts:
        - mountPath: /home/node/app/init.sh
          name: pmvol1
        - mountPath: /home/node/app/initPlayMaster.js
          name: pmvol2
      volumes:
      - name: pmvol1
        hostPath:
          path: /hostprj/PlayMaster/init.sh
          type: File
      - name: pmvol2
        hostPath:
          path: /hostprj/PlayMaster/initPlayMaster.js
          type: File